<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChenJianqi的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-22T11:49:45.812Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ChenJianqi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>观察者模式</title>
    <link href="http://yoursite.com/2016/08/20/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2016/08/20/观察者模式/</id>
    <published>2016-08-19T16:00:00.000Z</published>
    <updated>2016-08-22T11:49:45.812Z</updated>
    
    <content type="html"><![CDATA[<h1 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h1><html><br>  <body> 观察者模式<br>  <h3>一、观察者模式的定义与例子</h3><br>  &nbsp;&nbsp;观察者模式又称为发布/订阅模式<br>  <p>&nbsp;&nbsp;观察者模式是一种一对多的依赖关系，让多个观察者对象同时监听一个主题对象。这个主题对象在状态发生变化时，会通知所有的观察者，使它们更新自己。</p><br>  <p>&nbsp;&nbsp;例如：一个放哨的同学是一个主题对象，或者一个老师是一个主题对象。其他玩耍的同学是观察者。放哨的同学负责当老师来的时候通知大家。这便是一个观察者模式。</p><br>  <p>&nbsp;&nbsp;一个主题者应该具有的基本的方法：添加，删除，通知。例如放哨的同学，负责放哨的同学应该有添加通知的对象的功能，若关系不好了，可以不通知即删除通知对象的功能，还应有一个最重要的功能：通知大家老师来了！</p><br>  <p>&nbsp;&nbsp;一个观察者应该有的基本的方法：更新自己的状态。例如：玩游戏的同学，当老师来了，应该更新自己的状态–关闭窗口，继续学习。</p><br>  <p>&nbsp;&nbsp;但是这样的思路会有一个弊端：具体的观察者依赖于具体的主题者，具体的主题者依赖于具体的观察者，这样耦合性较为紧密，为双向耦合。所以为打破这种紧密的耦合性，使用抽象类，即抽象的主题者与抽象的观察者。</p><br>  <p>&nbsp;&nbsp;以同学放哨为例，将主题者抽象出来，名字为Subject，该抽象类有3个方法，Attach添加，Detach删除，Update更新。如下所示：</p><br><br><code>public abstract class Subject {
    public List&lt;Observer&gt; list = new ArrayList&lt;Observer&gt;();
    public void Attach(Observer ob){
        list.add(ob);
    }
    public void Dettach(Observer ob){
        list.remove(ob);
    }
    public void NotifyOb(){
        for(Observer o:list){
            o.update();
        }
    }
}</code>  　　　　<br><br><p>&nbsp;&nbsp;具体的主题者继承这个抽象类，有一个具体的状态属性。代码如下：</p><br>     public class ConcreteSubject extends Subject{<br>    private String concrete = null;<br>    public String getConcrete() {<br>        return concrete;<br>    }<br>    public void setConcrete(String concrete) {<br>        this.concrete = concrete;<br>    }<br>}<br><p>&nbsp;&nbsp;有一个抽象的观察者，具有的方法是更新，代码如下：</p><br>     public abstract class Observer {<br>    public abstract void update();<br>}<br><p>&nbsp;&nbsp;具体的观察者继承抽象的观察者。拥有自己的名字，状态属性。代码如下：</p><br>     public class ConcreteObserver extends Observer{<br><br>    private String name = null;<br>    private String statusString = null;<br>    private ConcreteSubject sub = null;<br>    public ConcreteObserver(ConcreteSubject sub,String name){<br>        this.name = name;<br>        this.sub = sub;<br>    }<br>    public String getName() {<br>        return name;<br>    }<br>    public void setName(String name) {<br>        this.name = name;<br>    }<br>    public String getStatusString() {<br>        return statusString;<br>    }<br>    public void setStatusString(String statusString) {<br>        this.statusString = statusString;<br>    }<br>    public ConcreteSubject getSub() {<br>        return sub;<br>    }<br>    public void setSub(ConcreteSubject sub) {<br>        this.sub = sub;<br>    }<br>    @Override<br>    public void update() {<br>        // TODO Auto-generated method stub<br>        statusString = sub.getConcrete();//接收老师的状态<br>        System.out.println(“关闭NBA窗口，继续学习”);<br>    }<br>}<br><p>&nbsp;&nbsp;客户端怎么调用呢？首先要创建一个主题者（放哨的同学）,将玩游戏的几个要好的同学加入到通知的集合中。等待老师的出现，老师一来，则去调用Update方法来一一通知大家。代码如下：</p><br>     ConcreteSubject subject = new ConcreteSubject();<br>        subject.setConcrete(“来了”);<br>        ConcreteObserver ob = new ConcreteObserver(subject, “x”);<br>        subject.Attach(ob);<br>        subject.NotifyOb();<br>  <h3>二、观察者模式的特点</h3><br>  <p>&nbsp;&nbsp;观察者模式所做的工作就是在解耦合，让耦合的双方都依赖于抽象而不是依赖于具体。从而使各自变化不会引起另一边的变化。</p><br>  <h3>三、观察者模式的缺点</h3><br>  <p>观察者模式当没有了观察者这样的接口的时候（不相关的类拥有不同的方法名字），通知的功能就不起作用了。因此就引出了事件委托。事件委托是一种引勇方法的类型。一旦委托分配了方法就有与该方法相同的行为。委托方法的使用可以像其他的方法一样，具有参数值和返回值。（不再详述）</p><br>  </body><br></html>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;观察者模式&quot;&gt;&lt;a href=&quot;#观察者模式&quot; class=&quot;headerlink&quot; title=&quot;观察者模式&quot;&gt;&lt;/a&gt;观察者模式&lt;/h1&gt;&lt;html&gt;&lt;br&gt;  &lt;body&gt; 观察者模式&lt;br&gt;  &lt;h3&gt;一、观察者模式的定义与例子&lt;/h3&gt;&lt;br&gt;  &amp;nb
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>KMP求next数组和nextval数组</title>
    <link href="http://yoursite.com/2016/08/17/KMP%E6%B1%82next%E5%92%8Cnextval%E6%95%B0%E7%BB%84%E7%9A%84%E6%B1%82%E6%B3%95/"/>
    <id>http://yoursite.com/2016/08/17/KMP求next和nextval数组的求法/</id>
    <published>2016-08-17T11:02:00.000Z</published>
    <updated>2016-08-18T03:11:19.818Z</updated>
    
    <content type="html"><![CDATA[<h3 id="本文主要介绍KMP中next数组的选择题的简单的求法"><a href="#本文主要介绍KMP中next数组的选择题的简单的求法" class="headerlink" title="本文主要介绍KMP中next数组的选择题的简单的求法"></a>本文主要介绍KMP中next数组的选择题的简单的求法</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;第一位的next值为0，第二位的next值为1。后面求解每一位的next值时，与前一位进行比较。首先将前一位与其next值对应的内容进行比较，如果相等，则该位的next值就是前一位的next值加上1；如果不等，向前继续寻找next值对应的内容来与前一位进行比较，直到找到某个位上内容的next值对应的内容与前一位相等为止，则这个位对应的值加上1即为需求的next值；如果找到第一位都没有找到与前一位相等的内容，那么需求的位上的next值即为1。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;next数组的求解方法是：<br><br>&nbsp;&nbsp;&nbsp;&nbsp;nextval[1]=0。从第二位开始，若要求nextval[i]，将next[i]的值对应的位的值与i的值行比较（例如，第i为的值为’b’，next[i]=3,则将i的值’b’与第三位的值进行比较），若相等，nextval[i]=nextval【next[i]】（例，nextval[i]=nextval[3]）；若不相等，则nextval[i]=next[i]（例，nextval[i]=next[i]=3）。</p>
<table>
<thead>
<tr>
<th style="text-align:center">模式串</th>
<th>a</th>
<th>b</th>
<th>a</th>
<th>a</th>
<th>b</th>
<th>c</th>
<th>a</th>
<th>c</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">next值</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>2</td>
<td>3</td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td style="text-align:center">nextval值</td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>2</td>
<td>3</td>
<td>1</td>
<td>2</td>
</tr>
</tbody>
</table>
<p>  1.第一位的nextval值必定为0，第二位如果与第一位相同则为0，如果不同则为1。<br><br> 2.第三位的next值为1，那么将第三位和第一位进行比较，均为a，相同，则，第三位的nextval值为0。<br><br>3.第四位的next值为2，那么将第四位和第二位进行比较，不同，则第四位的nextval值为其next值，为2。<br><br>4.第五位的next值为2，那么将第五位和第二位进行比较，相同，第二位的next值为1，则继续将第二位与第一位进行比较，不同，则第五位的nextval值为第二位的next值，为1。<br><br>5.第六位的next值为3，那么将第六位和第三位进行比较，不同，则第六位的nextval值为其next值，为3。<br><br>6.第七位的next值为1，那么将第七位和第一位进行比较，相同，则第七位的nextval值为0。<br><br>7.第八位的next值为2，那么将第八位和第二位进行比较，不同，则第八位的nextval值为其next值，为2。<br><br>可在“aaaab”内进行验证：<br></p>
<table>
<thead>
<tr>
<th style="text-align:center">模式串</th>
<th>a</th>
<th>a</th>
<th>a</th>
<th>a</th>
<th>b</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">next值</td>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
</tr>
<tr>
<td style="text-align:center">nextval值</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>4</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;本文主要介绍KMP中next数组的选择题的简单的求法&quot;&gt;&lt;a href=&quot;#本文主要介绍KMP中next数组的选择题的简单的求法&quot; class=&quot;headerlink&quot; title=&quot;本文主要介绍KMP中next数组的选择题的简单的求法&quot;&gt;&lt;/a&gt;本文主要介绍KM
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>我的第一篇文档</title>
    <link href="http://yoursite.com/2016/08/17/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E6%A1%A3/"/>
    <id>http://yoursite.com/2016/08/17/我的第一篇文档/</id>
    <published>2016-08-16T23:33:16.000Z</published>
    <updated>2016-08-17T00:25:12.213Z</updated>
    
    <content type="html"><![CDATA[<p>#我的生活</p>
<h2 id="‘systemout-println-“Hello”-’"><a href="#‘systemout-println-“Hello”-’" class="headerlink" title="‘systemout.println(“Hello”);’"></a>‘systemout.println(“Hello”);’</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#我的生活&lt;/p&gt;
&lt;h2 id=&quot;‘systemout-println-“Hello”-’&quot;&gt;&lt;a href=&quot;#‘systemout-println-“Hello”-’&quot; class=&quot;headerlink&quot; title=&quot;‘systemout.println(“Hel
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/08/16/hello-world/"/>
    <id>http://yoursite.com/2016/08/16/hello-world/</id>
    <published>2016-08-16T12:31:52.477Z</published>
    <updated>2016-08-16T12:43:04.205Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
